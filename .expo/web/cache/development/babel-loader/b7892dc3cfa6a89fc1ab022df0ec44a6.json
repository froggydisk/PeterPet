{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/seum/Desktop/peterpet/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Loading from \"./src/loading\";\nimport Main from \"./src/main\";\nimport 'react-native-gesture-handler';\n\nvar _default = function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoading: true\n    };\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setTimeout(function () {\n                _this.setState({\n                  isLoading: false\n                });\n              }, 3000);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return React.createElement(Main, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/seum/Desktop/peterpet/App.js"],"names":["React","Loading","Main","state","isLoading","componentDidMount","setTimeout","setState","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,OAAO,8BAAP;;;;;;;;;;;;;;;;;UAGEC,K,GAAM;AACJC,MAAAA,SAAS,EAAG;AADR,K;;UAGNC,iB,GAAmB;AAAA;AAAA;AAAA;AAAA;AAEjBC,cAAAA,UAAU,CAAC,YAAM;AAAC,sBAAKC,QAAL,CAAc;AAACH,kBAAAA,SAAS,EAAE;AAAZ,iBAAd;AAAkC,eAA1C,EAA2C,IAA3C,CAAV;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAKnB,kBAAQ;AACN,UAAG,KAAKD,KAAL,CAAWC,SAAd,EAAwB;AACtB,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEK;AACH,eAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;;;EAf0BJ,KAAK,CAACQ,S","sourcesContent":["import React from \"react\";\nimport Loading from \"./src/loading\";\nimport Main from \"./src/main\";\nimport 'react-native-gesture-handler';\n  \nexport default class extends React.Component{\n  state={\n    isLoading : true\n  };\n  componentDidMount= async() => {  \n    // 1,000가 1초\n    setTimeout(() => {this.setState({isLoading: false})},3000);\n  }\n\n  render(){\n    if(this.state.isLoading){\n      return <Loading/>\n    }else{\n      return <Main />;\n    }\n  }\n} "]},"metadata":{},"sourceType":"module"}