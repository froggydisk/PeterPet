{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"children\", \"style\", \"color\", \"gradient\", \"primary\", \"secondary\", \"tertiary\", \"black\", \"white\", \"light\", \"dark\", \"gray\", \"danger\", \"warning\", \"success\", \"info\", \"flex\", \"radius\", \"round\", \"rounded\", \"disabled\", \"margin\", \"marginBottom\", \"marginTop\", \"marginHorizontal\", \"marginVertical\", \"marginRight\", \"marginLeft\", \"padding\", \"paddingBottom\", \"paddingTop\", \"paddingHorizontal\", \"paddingVertical\", \"paddingRight\", \"paddingLeft\", \"align\", \"justify\", \"height\", \"width\", \"row\", \"outlined\", \"social\", \"activeOpacity\", \"shadow\", \"position\", \"right\", \"left\", \"top\", \"bottom\", \"haptic\", \"vibrate\", \"vibrateRepeat\", \"onPress\"];\n\nvar _this = this,\n    _jsxFileName = \"/Users/seum/Desktop/peterpet/src/components/Button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback } from 'react';\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Haptics from 'expo-haptics';\nimport useTheme from \"../hooks/useTheme\";\n\nvar Button = function Button(_ref) {\n  var _ref$id = _ref.id,\n      id = _ref$id === void 0 ? 'Button' : _ref$id,\n      children = _ref.children,\n      style = _ref.style,\n      color = _ref.color,\n      gradient = _ref.gradient,\n      primary = _ref.primary,\n      secondary = _ref.secondary,\n      tertiary = _ref.tertiary,\n      black = _ref.black,\n      white = _ref.white,\n      light = _ref.light,\n      dark = _ref.dark,\n      gray = _ref.gray,\n      danger = _ref.danger,\n      warning = _ref.warning,\n      success = _ref.success,\n      info = _ref.info,\n      flex = _ref.flex,\n      radius = _ref.radius,\n      round = _ref.round,\n      rounded = _ref.rounded,\n      disabled = _ref.disabled,\n      margin = _ref.margin,\n      marginBottom = _ref.marginBottom,\n      marginTop = _ref.marginTop,\n      marginHorizontal = _ref.marginHorizontal,\n      marginVertical = _ref.marginVertical,\n      marginRight = _ref.marginRight,\n      marginLeft = _ref.marginLeft,\n      padding = _ref.padding,\n      paddingBottom = _ref.paddingBottom,\n      paddingTop = _ref.paddingTop,\n      paddingHorizontal = _ref.paddingHorizontal,\n      paddingVertical = _ref.paddingVertical,\n      paddingRight = _ref.paddingRight,\n      paddingLeft = _ref.paddingLeft,\n      align = _ref.align,\n      justify = _ref.justify,\n      height = _ref.height,\n      width = _ref.width,\n      row = _ref.row,\n      outlined = _ref.outlined,\n      social = _ref.social,\n      _ref$activeOpacity = _ref.activeOpacity,\n      activeOpacity = _ref$activeOpacity === void 0 ? 0.7 : _ref$activeOpacity,\n      _ref$shadow = _ref.shadow,\n      shadow = _ref$shadow === void 0 ? true : _ref$shadow,\n      position = _ref.position,\n      right = _ref.right,\n      left = _ref.left,\n      top = _ref.top,\n      bottom = _ref.bottom,\n      _ref$haptic = _ref.haptic,\n      haptic = _ref$haptic === void 0 ? true : _ref$haptic,\n      vibrate = _ref.vibrate,\n      vibrateRepeat = _ref.vibrateRepeat,\n      onPress = _ref.onPress,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors,\n      sizes = _useTheme.sizes;\n\n  var colorIndex = primary ? 'primary' : secondary ? 'secondary' : tertiary ? 'tertiary' : black ? 'black' : white ? 'white' : light ? 'light' : dark ? 'dark' : gray ? 'gray' : danger ? 'danger' : warning ? 'warning' : success ? 'success' : info ? 'info' : null;\n  var buttonColor = color ? color : colorIndex ? colors == null ? void 0 : colors[colorIndex] : 'transparent';\n  var buttonStyles = StyleSheet.flatten([style, _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    minHeight: sizes.xl,\n    minWidth: sizes.xl,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: buttonColor,\n    borderRadius: rounded ? sizes.s : sizes.buttonRadius\n  }, shadow && buttonColor !== 'transparent' && {\n    shadowColor: colors.shadow,\n    shadowOffset: {\n      width: sizes.shadowOffsetWidth,\n      height: sizes.shadowOffsetHeight\n    },\n    shadowOpacity: sizes.shadowOpacity,\n    shadowRadius: sizes.shadowRadius,\n    elevation: sizes.elevation\n  }), row && {\n    flexDirection: 'row'\n  }), radius && {\n    borderRadius: radius\n  }), flex !== undefined && {\n    flex: flex\n  }), margin !== undefined && {\n    margin: margin\n  }), marginBottom && {\n    marginBottom: marginBottom\n  }), marginTop && {\n    marginTop: marginTop\n  }), marginHorizontal && {\n    marginHorizontal: marginHorizontal\n  }), marginVertical && {\n    marginVertical: marginVertical\n  }), marginRight && {\n    marginRight: marginRight\n  }), marginLeft && {\n    marginLeft: marginLeft\n  }), padding !== undefined && {\n    padding: padding\n  }), paddingBottom && {\n    paddingBottom: paddingBottom\n  }), paddingTop && {\n    paddingTop: paddingTop\n  }), paddingHorizontal && {\n    paddingHorizontal: paddingHorizontal\n  }), paddingVertical && {\n    paddingVertical: paddingVertical\n  }), paddingRight && {\n    paddingRight: paddingRight\n  }), paddingLeft && {\n    paddingLeft: paddingLeft\n  }), align && {\n    alignItems: align\n  }), justify && {\n    justifyContent: justify\n  }), height && {\n    height: height\n  }), width && {\n    width: width\n  }), typeof outlined === 'boolean' && {\n    borderWidth: sizes.buttonBorder,\n    borderColor: buttonColor,\n    backgroundColor: 'transparent'\n  }), typeof outlined === 'string' && {\n    borderWidth: sizes.buttonBorder,\n    borderColor: outlined\n  }), social && {\n    backgroundColor: colors == null ? void 0 : colors[social],\n    width: sizes.socialSize,\n    height: sizes.socialSize,\n    borderRadius: sizes.socialRadius\n  }), disabled && {\n    opacity: 0.5\n  }), position && {\n    position: position\n  }), right !== undefined && {\n    right: right\n  }), left !== undefined && {\n    left: left\n  }), top !== undefined && {\n    top: top\n  }), bottom !== undefined && {\n    bottom: bottom\n  })]);\n  var handlePress = useCallback(function (event) {\n    onPress == null ? void 0 : onPress(event);\n\n    if (vibrate) {\n      Vibration.vibrate(vibrate, vibrateRepeat);\n    }\n\n    if (haptic) {\n      Haptics.selectionAsync();\n    }\n  }, [haptic, vibrate, vibrateRepeat, onPress]);\n\n  if (round) {\n    var maxSize = Math.max(Number(buttonStyles.width || 0), Number(buttonStyles.minWidth || 0), Number(buttonStyles.maxWidth || 0), Number(buttonStyles.height || 0), Number(buttonStyles.minHeight || 0), Number(buttonStyles.maxHeight || 0));\n    buttonStyles.maxWidth = maxSize;\n    buttonStyles.maxHeight = maxSize;\n    buttonStyles.borderRadius = maxSize / 2;\n  }\n\n  var gradientStyles = StyleSheet.flatten([buttonStyles, _objectSpread({\n    flex: 1,\n    width: '100%'\n  }, round && {\n    maxWidth: buttonStyles.maxWidth\n  })]);\n  var buttonID = Platform.OS === 'android' ? {\n    accessibilityLabel: id\n  } : {\n    testID: id\n  };\n\n  if (gradient) {\n    return React.createElement(TouchableOpacity, _extends({}, buttonID, {\n      activeOpacity: activeOpacity,\n      onPress: handlePress\n    }, props, {\n      style: buttonStyles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }), React.createElement(LinearGradient, {\n      style: gradientStyles,\n      colors: gradient,\n      start: [0, 1],\n      end: [1, 0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n  if (social) {\n    var socialIcon = social === 'facebook' ? 'logo-facebook' : social === 'twitter' ? 'logo-twitter' : 'logo-dribbble';\n    return React.createElement(TouchableOpacity, _extends({}, buttonID, {\n      activeOpacity: activeOpacity,\n      onPress: handlePress\n    }, props, {\n      style: buttonStyles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }), React.createElement(Ionicons, {\n      name: socialIcon,\n      size: sizes.socialIconSize,\n      color: colors.white,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(TouchableOpacity, _extends({}, buttonID, {\n    activeOpacity: activeOpacity,\n    onPress: handlePress\n  }, props, {\n    style: buttonStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexport default React.memo(Button);","map":{"version":3,"sources":["/Users/seum/Desktop/peterpet/src/components/Button.tsx"],"names":["React","useCallback","LinearGradient","Ionicons","Haptics","useTheme","Button","id","children","style","color","gradient","primary","secondary","tertiary","black","white","light","dark","gray","danger","warning","success","info","flex","radius","round","rounded","disabled","margin","marginBottom","marginTop","marginHorizontal","marginVertical","marginRight","marginLeft","padding","paddingBottom","paddingTop","paddingHorizontal","paddingVertical","paddingRight","paddingLeft","align","justify","height","width","row","outlined","social","activeOpacity","shadow","position","right","left","top","bottom","haptic","vibrate","vibrateRepeat","onPress","props","colors","sizes","colorIndex","buttonColor","buttonStyles","StyleSheet","flatten","minHeight","xl","minWidth","alignItems","justifyContent","backgroundColor","borderRadius","s","buttonRadius","shadowColor","shadowOffset","shadowOffsetWidth","shadowOffsetHeight","shadowOpacity","shadowRadius","elevation","flexDirection","undefined","borderWidth","buttonBorder","borderColor","socialSize","socialRadius","opacity","handlePress","event","Vibration","selectionAsync","maxSize","Math","max","Number","maxWidth","maxHeight","gradientStyles","buttonID","Platform","OS","accessibilityLabel","testID","socialIcon","socialIconSize","memo"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;;;;;AAQA,SAAQC,cAAR,QAA6B,sBAA7B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AAEA,OAAOC,QAAP;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAwDK;AAAA,qBAvDlBC,EAuDkB;AAAA,MAvDlBA,EAuDkB,wBAvDb,QAuDa;AAAA,MAtDlBC,QAsDkB,QAtDlBA,QAsDkB;AAAA,MArDlBC,KAqDkB,QArDlBA,KAqDkB;AAAA,MApDlBC,KAoDkB,QApDlBA,KAoDkB;AAAA,MAnDlBC,QAmDkB,QAnDlBA,QAmDkB;AAAA,MAlDlBC,OAkDkB,QAlDlBA,OAkDkB;AAAA,MAjDlBC,SAiDkB,QAjDlBA,SAiDkB;AAAA,MAhDlBC,QAgDkB,QAhDlBA,QAgDkB;AAAA,MA/ClBC,KA+CkB,QA/ClBA,KA+CkB;AAAA,MA9ClBC,KA8CkB,QA9ClBA,KA8CkB;AAAA,MA7ClBC,KA6CkB,QA7ClBA,KA6CkB;AAAA,MA5ClBC,IA4CkB,QA5ClBA,IA4CkB;AAAA,MA3ClBC,IA2CkB,QA3ClBA,IA2CkB;AAAA,MA1ClBC,MA0CkB,QA1ClBA,MA0CkB;AAAA,MAzClBC,OAyCkB,QAzClBA,OAyCkB;AAAA,MAxClBC,OAwCkB,QAxClBA,OAwCkB;AAAA,MAvClBC,IAuCkB,QAvClBA,IAuCkB;AAAA,MAtClBC,IAsCkB,QAtClBA,IAsCkB;AAAA,MArClBC,MAqCkB,QArClBA,MAqCkB;AAAA,MApClBC,KAoCkB,QApClBA,KAoCkB;AAAA,MAnClBC,OAmCkB,QAnClBA,OAmCkB;AAAA,MAlClBC,QAkCkB,QAlClBA,QAkCkB;AAAA,MAjClBC,MAiCkB,QAjClBA,MAiCkB;AAAA,MAhClBC,YAgCkB,QAhClBA,YAgCkB;AAAA,MA/BlBC,SA+BkB,QA/BlBA,SA+BkB;AAAA,MA9BlBC,gBA8BkB,QA9BlBA,gBA8BkB;AAAA,MA7BlBC,cA6BkB,QA7BlBA,cA6BkB;AAAA,MA5BlBC,WA4BkB,QA5BlBA,WA4BkB;AAAA,MA3BlBC,UA2BkB,QA3BlBA,UA2BkB;AAAA,MA1BlBC,OA0BkB,QA1BlBA,OA0BkB;AAAA,MAzBlBC,aAyBkB,QAzBlBA,aAyBkB;AAAA,MAxBlBC,UAwBkB,QAxBlBA,UAwBkB;AAAA,MAvBlBC,iBAuBkB,QAvBlBA,iBAuBkB;AAAA,MAtBlBC,eAsBkB,QAtBlBA,eAsBkB;AAAA,MArBlBC,YAqBkB,QArBlBA,YAqBkB;AAAA,MApBlBC,WAoBkB,QApBlBA,WAoBkB;AAAA,MAnBlBC,KAmBkB,QAnBlBA,KAmBkB;AAAA,MAlBlBC,OAkBkB,QAlBlBA,OAkBkB;AAAA,MAjBlBC,MAiBkB,QAjBlBA,MAiBkB;AAAA,MAhBlBC,KAgBkB,QAhBlBA,KAgBkB;AAAA,MAflBC,GAekB,QAflBA,GAekB;AAAA,MAdlBC,QAckB,QAdlBA,QAckB;AAAA,MAblBC,MAakB,QAblBA,MAakB;AAAA,gCAZlBC,aAYkB;AAAA,MAZlBA,aAYkB,mCAZF,GAYE;AAAA,yBAXlBC,MAWkB;AAAA,MAXlBA,MAWkB,4BAXT,IAWS;AAAA,MAVlBC,QAUkB,QAVlBA,QAUkB;AAAA,MATlBC,KASkB,QATlBA,KASkB;AAAA,MARlBC,IAQkB,QARlBA,IAQkB;AAAA,MAPlBC,GAOkB,QAPlBA,GAOkB;AAAA,MANlBC,MAMkB,QANlBA,MAMkB;AAAA,yBALlBC,MAKkB;AAAA,MALlBA,MAKkB,4BALT,IAKS;AAAA,MAJlBC,OAIkB,QAJlBA,OAIkB;AAAA,MAHlBC,aAGkB,QAHlBA,aAGkB;AAAA,MAFlBC,OAEkB,QAFlBA,OAEkB;AAAA,MADfC,KACe;;AAClB,kBAAwBxD,QAAQ,EAAhC;AAAA,MAAOyD,MAAP,aAAOA,MAAP;AAAA,MAAeC,KAAf,aAAeA,KAAf;;AACA,MAAMC,UAAU,GAAGpD,OAAO,GACtB,SADsB,GAEtBC,SAAS,GACT,WADS,GAETC,QAAQ,GACR,UADQ,GAERC,KAAK,GACL,OADK,GAELC,KAAK,GACL,OADK,GAELC,KAAK,GACL,OADK,GAELC,IAAI,GACJ,MADI,GAEJC,IAAI,GACJ,MADI,GAEJC,MAAM,GACN,QADM,GAENC,OAAO,GACP,SADO,GAEPC,OAAO,GACP,SADO,GAEPC,IAAI,GACJ,MADI,GAEJ,IAxBJ;AA0BA,MAAM0C,WAAW,GAAGvD,KAAK,GACrBA,KADqB,GAErBsD,UAAU,GACVF,MADU,oBACVA,MAAM,CAAGE,UAAH,CADI,GAEV,aAJJ;AAMA,MAAME,YAAY,GAAGC,UAAU,CAACC,OAAX,CAAmB,CACtC3D,KADsC;AAGpC4D,IAAAA,SAAS,EAAEN,KAAK,CAACO,EAHmB;AAIpCC,IAAAA,QAAQ,EAAER,KAAK,CAACO,EAJoB;AAKpCE,IAAAA,UAAU,EAAE,QALwB;AAMpCC,IAAAA,cAAc,EAAE,QANoB;AAOpCC,IAAAA,eAAe,EAAET,WAPmB;AAQpCU,IAAAA,YAAY,EAAEhD,OAAO,GAAGoC,KAAK,CAACa,CAAT,GAAab,KAAK,CAACc;AARJ,KAShC1B,MAAM,IACRc,WAAW,KAAK,aADd,IAC+B;AAC/Ba,IAAAA,WAAW,EAAEhB,MAAM,CAACX,MADW;AAE/B4B,IAAAA,YAAY,EAAE;AACZjC,MAAAA,KAAK,EAAEiB,KAAK,CAACiB,iBADD;AAEZnC,MAAAA,MAAM,EAAEkB,KAAK,CAACkB;AAFF,KAFiB;AAM/BC,IAAAA,aAAa,EAAEnB,KAAK,CAACmB,aANU;AAO/BC,IAAAA,YAAY,EAAEpB,KAAK,CAACoB,YAPW;AAQ/BC,IAAAA,SAAS,EAAErB,KAAK,CAACqB;AARc,GAVC,GAoBhCrC,GAAG,IAAI;AAACsC,IAAAA,aAAa,EAAE;AAAhB,GApByB,GAqBhC5D,MAAM,IAAI;AAACkD,IAAAA,YAAY,EAAElD;AAAf,GArBsB,GAsBhCD,IAAI,KAAK8D,SAAT,IAAsB;AAAC9D,IAAAA,IAAI,EAAJA;AAAD,GAtBU,GAuBhCK,MAAM,KAAKyD,SAAX,IAAwB;AAACzD,IAAAA,MAAM,EAANA;AAAD,GAvBQ,GAwBhCC,YAAY,IAAI;AAACA,IAAAA,YAAY,EAAZA;AAAD,GAxBgB,GAyBhCC,SAAS,IAAI;AAACA,IAAAA,SAAS,EAATA;AAAD,GAzBmB,GA0BhCC,gBAAgB,IAAI;AAACA,IAAAA,gBAAgB,EAAhBA;AAAD,GA1BY,GA2BhCC,cAAc,IAAI;AAACA,IAAAA,cAAc,EAAdA;AAAD,GA3Bc,GA4BhCC,WAAW,IAAI;AAACA,IAAAA,WAAW,EAAXA;AAAD,GA5BiB,GA6BhCC,UAAU,IAAI;AAACA,IAAAA,UAAU,EAAVA;AAAD,GA7BkB,GA8BhCC,OAAO,KAAKkD,SAAZ,IAAyB;AAAClD,IAAAA,OAAO,EAAPA;AAAD,GA9BO,GA+BhCC,aAAa,IAAI;AAACA,IAAAA,aAAa,EAAbA;AAAD,GA/Be,GAgChCC,UAAU,IAAI;AAACA,IAAAA,UAAU,EAAVA;AAAD,GAhCkB,GAiChCC,iBAAiB,IAAI;AAACA,IAAAA,iBAAiB,EAAjBA;AAAD,GAjCW,GAkChCC,eAAe,IAAI;AAACA,IAAAA,eAAe,EAAfA;AAAD,GAlCa,GAmChCC,YAAY,IAAI;AAACA,IAAAA,YAAY,EAAZA;AAAD,GAnCgB,GAoChCC,WAAW,IAAI;AAACA,IAAAA,WAAW,EAAXA;AAAD,GApCiB,GAqChCC,KAAK,IAAI;AAAC6B,IAAAA,UAAU,EAAE7B;AAAb,GArCuB,GAsChCC,OAAO,IAAI;AAAC6B,IAAAA,cAAc,EAAE7B;AAAjB,GAtCqB,GAuChCC,MAAM,IAAI;AAACA,IAAAA,MAAM,EAANA;AAAD,GAvCsB,GAwChCC,KAAK,IAAI;AAACA,IAAAA,KAAK,EAALA;AAAD,GAxCuB,GAyChC,OAAOE,QAAP,KAAoB,SAApB,IAAiC;AACnCuC,IAAAA,WAAW,EAAExB,KAAK,CAACyB,YADgB;AAEnCC,IAAAA,WAAW,EAAExB,WAFsB;AAGnCS,IAAAA,eAAe,EAAE;AAHkB,GAzCD,GA8ChC,OAAO1B,QAAP,KAAoB,QAApB,IAAgC;AAClCuC,IAAAA,WAAW,EAAExB,KAAK,CAACyB,YADe;AAElCC,IAAAA,WAAW,EAAEzC;AAFqB,GA9CA,GAkDhCC,MAAM,IAAI;AACZyB,IAAAA,eAAe,EAAEZ,MAAF,oBAAEA,MAAM,CAAGb,MAAH,CADX;AAEZH,IAAAA,KAAK,EAAEiB,KAAK,CAAC2B,UAFD;AAGZ7C,IAAAA,MAAM,EAAEkB,KAAK,CAAC2B,UAHF;AAIZf,IAAAA,YAAY,EAAEZ,KAAK,CAAC4B;AAJR,GAlDsB,GAwDhC/D,QAAQ,IAAI;AAACgE,IAAAA,OAAO,EAAE;AAAV,GAxDoB,GAyDhCxC,QAAQ,IAAI;AAACA,IAAAA,QAAQ,EAARA;AAAD,GAzDoB,GA0DhCC,KAAK,KAAKiC,SAAV,IAAuB;AAACjC,IAAAA,KAAK,EAALA;AAAD,GA1DS,GA2DhCC,IAAI,KAAKgC,SAAT,IAAsB;AAAChC,IAAAA,IAAI,EAAJA;AAAD,GA3DU,GA4DhCC,GAAG,KAAK+B,SAAR,IAAqB;AAAC/B,IAAAA,GAAG,EAAHA;AAAD,GA5DW,GA6DhCC,MAAM,KAAK8B,SAAX,IAAwB;AAAC9B,IAAAA,MAAM,EAANA;AAAD,GA7DQ,EAAnB,CAArB;AAkEA,MAAMqC,WAAW,GAAG5F,WAAW,CAC7B,UAAC6F,KAAD,EAAW;AACTlC,IAAAA,OAAO,QAAP,YAAAA,OAAO,CAAGkC,KAAH,CAAP;;AAGA,QAAIpC,OAAJ,EAAa;AACXqC,MAAAA,SAAS,CAACrC,OAAV,CAAkBA,OAAlB,EAA2BC,aAA3B;AACD;;AAGD,QAAIF,MAAJ,EAAY;AACVrD,MAAAA,OAAO,CAAC4F,cAAR;AACD;AACF,GAb4B,EAc7B,CAACvC,MAAD,EAASC,OAAT,EAAkBC,aAAlB,EAAiCC,OAAjC,CAd6B,CAA/B;;AAiBA,MAAIlC,KAAJ,EAAW;AACT,QAAMuE,OAAO,GAAGC,IAAI,CAACC,GAAL,CACdC,MAAM,CAAClC,YAAY,CAACpB,KAAb,IAAsB,CAAvB,CADQ,EAEdsD,MAAM,CAAClC,YAAY,CAACK,QAAb,IAAyB,CAA1B,CAFQ,EAGd6B,MAAM,CAAClC,YAAY,CAACmC,QAAb,IAAyB,CAA1B,CAHQ,EAIdD,MAAM,CAAClC,YAAY,CAACrB,MAAb,IAAuB,CAAxB,CAJQ,EAKduD,MAAM,CAAClC,YAAY,CAACG,SAAb,IAA0B,CAA3B,CALQ,EAMd+B,MAAM,CAAClC,YAAY,CAACoC,SAAb,IAA0B,CAA3B,CANQ,CAAhB;AAQApC,IAAAA,YAAY,CAACmC,QAAb,GAAwBJ,OAAxB;AACA/B,IAAAA,YAAY,CAACoC,SAAb,GAAyBL,OAAzB;AACA/B,IAAAA,YAAY,CAACS,YAAb,GAA4BsB,OAAO,GAAG,CAAtC;AACD;;AAED,MAAMM,cAAc,GAAGpC,UAAU,CAACC,OAAX,CAAmB,CACxCF,YADwC;AAGtC1C,IAAAA,IAAI,EAAE,CAHgC;AAItCsB,IAAAA,KAAK,EAAE;AAJ+B,KAKlCpB,KAAK,IAAI;AAAC2E,IAAAA,QAAQ,EAAEnC,YAAY,CAACmC;AAAxB,GALyB,EAAnB,CAAvB;AAUA,MAAMG,QAAQ,GACZC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B;AAACC,IAAAA,kBAAkB,EAAEpG;AAArB,GAA5B,GAAuD;AAACqG,IAAAA,MAAM,EAAErG;AAAT,GADzD;;AAGA,MAAII,QAAJ,EAAc;AACZ,WACE,oBAAC,gBAAD,eACM6F,QADN;AAEE,MAAA,aAAa,EAAEtD,aAFjB;AAGE,MAAA,OAAO,EAAE2C;AAHX,OAIMhC,KAJN;AAKE,MAAA,KAAK,EAAEK,YALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAME,oBAAC,cAAD;AACE,MAAA,KAAK,EAAEqC,cADT;AAEE,MAAA,MAAM,EAAE5F,QAFV;AAGE,MAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHT;AAIE,MAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGH,QALH,CANF,CADF;AAgBD;;AAED,MAAIyC,MAAJ,EAAY;AACV,QAAM4D,UAAU,GACd5D,MAAM,KAAK,UAAX,GACI,eADJ,GAEIA,MAAM,KAAK,SAAX,GACA,cADA,GAEA,eALN;AAOA,WACE,oBAAC,gBAAD,eACMuD,QADN;AAEE,MAAA,aAAa,EAAEtD,aAFjB;AAGE,MAAA,OAAO,EAAE2C;AAHX,OAIMhC,KAJN;AAKE,MAAA,KAAK,EAAEK,YALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAME,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE2C,UADR;AAEE,MAAA,IAAI,EAAE9C,KAAK,CAAC+C,cAFd;AAGE,MAAA,KAAK,EAAEhD,MAAM,CAAC9C,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAcD;;AAED,SACE,oBAAC,gBAAD,eACMwF,QADN;AAEE,IAAA,aAAa,EAAEtD,aAFjB;AAGE,IAAA,OAAO,EAAE2C;AAHX,KAIMhC,KAJN;AAKE,IAAA,KAAK,EAAEK,YALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMG1D,QANH,CADF;AAUD,CA7PD;;AA+PA,eAAeR,KAAK,CAAC+G,IAAN,CAAWzG,MAAX,CAAf","sourcesContent":["import React, {useCallback} from 'react';\nimport {\n  ViewStyle,\n  Vibration,\n  StyleSheet,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport {LinearGradient} from 'expo-linear-gradient';\nimport {Ionicons} from '@expo/vector-icons';\nimport * as Haptics from 'expo-haptics';\n\nimport useTheme from '../hooks/useTheme';\nimport {IButtonProps} from '../constants/types';\n\nconst Button = ({\n  id = 'Button',\n  children,\n  style,\n  color,\n  gradient,\n  primary,\n  secondary,\n  tertiary,\n  black,\n  white,\n  light,\n  dark,\n  gray,\n  danger,\n  warning,\n  success,\n  info,\n  flex,\n  radius,\n  round,\n  rounded,\n  disabled,\n  margin,\n  marginBottom,\n  marginTop,\n  marginHorizontal,\n  marginVertical,\n  marginRight,\n  marginLeft,\n  padding,\n  paddingBottom,\n  paddingTop,\n  paddingHorizontal,\n  paddingVertical,\n  paddingRight,\n  paddingLeft,\n  align,\n  justify,\n  height,\n  width,\n  row,\n  outlined,\n  social,\n  activeOpacity = 0.7,\n  shadow = true,\n  position,\n  right,\n  left,\n  top,\n  bottom,\n  haptic = true,\n  vibrate,\n  vibrateRepeat,\n  onPress,\n  ...props\n}: IButtonProps) => {\n  const {colors, sizes} = useTheme();\n  const colorIndex = primary\n    ? 'primary'\n    : secondary\n    ? 'secondary'\n    : tertiary\n    ? 'tertiary'\n    : black\n    ? 'black'\n    : white\n    ? 'white'\n    : light\n    ? 'light'\n    : dark\n    ? 'dark'\n    : gray\n    ? 'gray'\n    : danger\n    ? 'danger'\n    : warning\n    ? 'warning'\n    : success\n    ? 'success'\n    : info\n    ? 'info'\n    : null;\n\n  const buttonColor = color\n    ? color\n    : colorIndex\n    ? colors?.[colorIndex]\n    : 'transparent';\n\n  const buttonStyles = StyleSheet.flatten([\n    style,\n    {\n      minHeight: sizes.xl,\n      minWidth: sizes.xl,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: buttonColor,\n      borderRadius: rounded ? sizes.s : sizes.buttonRadius,\n      ...(shadow &&\n        buttonColor !== 'transparent' && {\n          shadowColor: colors.shadow,\n          shadowOffset: {\n            width: sizes.shadowOffsetWidth,\n            height: sizes.shadowOffsetHeight,\n          },\n          shadowOpacity: sizes.shadowOpacity,\n          shadowRadius: sizes.shadowRadius,\n          elevation: sizes.elevation,\n        }),\n      ...(row && {flexDirection: 'row'}),\n      ...(radius && {borderRadius: radius}),\n      ...(flex !== undefined && {flex}),\n      ...(margin !== undefined && {margin}),\n      ...(marginBottom && {marginBottom}),\n      ...(marginTop && {marginTop}),\n      ...(marginHorizontal && {marginHorizontal}),\n      ...(marginVertical && {marginVertical}),\n      ...(marginRight && {marginRight}),\n      ...(marginLeft && {marginLeft}),\n      ...(padding !== undefined && {padding}),\n      ...(paddingBottom && {paddingBottom}),\n      ...(paddingTop && {paddingTop}),\n      ...(paddingHorizontal && {paddingHorizontal}),\n      ...(paddingVertical && {paddingVertical}),\n      ...(paddingRight && {paddingRight}),\n      ...(paddingLeft && {paddingLeft}),\n      ...(align && {alignItems: align}),\n      ...(justify && {justifyContent: justify}),\n      ...(height && {height}),\n      ...(width && {width}),\n      ...(typeof outlined === 'boolean' && {\n        borderWidth: sizes.buttonBorder,\n        borderColor: buttonColor,\n        backgroundColor: 'transparent',\n      }),\n      ...(typeof outlined === 'string' && {\n        borderWidth: sizes.buttonBorder,\n        borderColor: outlined,\n      }),\n      ...(social && {\n        backgroundColor: colors?.[social],\n        width: sizes.socialSize,\n        height: sizes.socialSize,\n        borderRadius: sizes.socialRadius,\n      }),\n      ...(disabled && {opacity: 0.5}),\n      ...(position && {position}),\n      ...(right !== undefined && {right}),\n      ...(left !== undefined && {left}),\n      ...(top !== undefined && {top}),\n      ...(bottom !== undefined && {bottom}),\n    },\n  ]) as ViewStyle;\n\n  /* handle onPress event */\n  const handlePress = useCallback(\n    (event) => {\n      onPress?.(event);\n\n      /* vibrate onPress */\n      if (vibrate) {\n        Vibration.vibrate(vibrate, vibrateRepeat);\n      }\n\n      /* haptic feedback onPress */\n      if (haptic) {\n        Haptics.selectionAsync();\n      }\n    },\n    [haptic, vibrate, vibrateRepeat, onPress],\n  );\n\n  if (round) {\n    const maxSize = Math.max(\n      Number(buttonStyles.width || 0),\n      Number(buttonStyles.minWidth || 0),\n      Number(buttonStyles.maxWidth || 0),\n      Number(buttonStyles.height || 0),\n      Number(buttonStyles.minHeight || 0),\n      Number(buttonStyles.maxHeight || 0),\n    );\n    buttonStyles.maxWidth = maxSize;\n    buttonStyles.maxHeight = maxSize;\n    buttonStyles.borderRadius = maxSize / 2;\n  }\n\n  const gradientStyles = StyleSheet.flatten([\n    buttonStyles,\n    {\n      flex: 1,\n      width: '100%',\n      ...(round && {maxWidth: buttonStyles.maxWidth}),\n    },\n  ]) as ViewStyle;\n\n  // generate component testID or accessibilityLabel based on Platform.OS\n  const buttonID =\n    Platform.OS === 'android' ? {accessibilityLabel: id} : {testID: id};\n\n  if (gradient) {\n    return (\n      <TouchableOpacity\n        {...buttonID}\n        activeOpacity={activeOpacity}\n        onPress={handlePress}\n        {...props}\n        style={buttonStyles}>\n        <LinearGradient\n          style={gradientStyles}\n          colors={gradient}\n          start={[0, 1]}\n          end={[1, 0]}>\n          {children}\n        </LinearGradient>\n      </TouchableOpacity>\n    );\n  }\n\n  if (social) {\n    const socialIcon =\n      social === 'facebook'\n        ? 'logo-facebook'\n        : social === 'twitter'\n        ? 'logo-twitter'\n        : 'logo-dribbble';\n\n    return (\n      <TouchableOpacity\n        {...buttonID}\n        activeOpacity={activeOpacity}\n        onPress={handlePress}\n        {...props}\n        style={buttonStyles}>\n        <Ionicons\n          name={socialIcon}\n          size={sizes.socialIconSize}\n          color={colors.white}\n        />\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <TouchableOpacity\n      {...buttonID}\n      activeOpacity={activeOpacity}\n      onPress={handlePress}\n      {...props}\n      style={buttonStyles}>\n      {children}\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(Button);\n"]},"metadata":{},"sourceType":"module"}