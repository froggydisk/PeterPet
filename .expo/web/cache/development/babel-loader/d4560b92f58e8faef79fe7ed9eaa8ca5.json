{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/seum/Desktop/peterpet/src/main.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFonts } from 'expo-font';\nimport { Fontisto } from '@expo/vector-icons';\nimport IconBadge from 'react-native-icon-badge';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons, Feather, Ionicons, AntDesign } from '@expo/vector-icons';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { DataProvider } from \"./hooks\";\nimport HomeScreen from \"./screen/HomeScreen\";\nimport SettingsScreen from \"./screen/SettingsScreen\";\nimport ChatScreen from \"./screen/ChatScreen\";\nimport CommunityScreen from \"./screen/CommunityScreen\";\nimport ProfileScreen from \"./screen/ProfileScreen\";\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigator = function TabNavigator() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          switch (route.name) {\n            case 'Home':\n              iconName = 'home';\n              return React.createElement(Feather, {\n                size: size,\n                name: iconName,\n                color: color,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 17\n                }\n              });\n\n            case 'Chat':\n              iconName = 'forum-outline';\n              break;\n\n            case 'Community':\n              iconName = 'view-dashboard-outline';\n              break;\n\n            case 'Profile':\n              iconName = 'profile';\n              return React.createElement(AntDesign, {\n                size: size,\n                name: iconName,\n                color: color,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 17\n                }\n              });\n\n            default:\n              iconName = 'settings-outline';\n              return React.createElement(Ionicons, {\n                size: size,\n                name: iconName,\n                color: color,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 17\n                }\n              });\n          }\n\n          return React.createElement(MaterialCommunityIcons, {\n            size: size,\n            name: iconName,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: '#38610B',\n      inactiveTintColor: '#C7CDD3'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Home\",\n    component: HomeScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Profile\",\n    component: ProfileScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Chat\",\n    component: ChatScreen,\n    options: {\n      headerShown: false,\n      tabBarBadge: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Community\",\n    component: CommunityScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Settings\",\n    component: SettingsScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar Stack = createNativeStackNavigator();\n\nfunction LogoTitle() {\n  return React.createElement(Image, {\n    style: {\n      width: 80,\n      height: 50\n    },\n    source: require(\"../assets/peter.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default function App() {\n  var _this2 = this;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var onPress = function onPress() {\n    return setCount(function (prevCount) {\n      return prevCount + 1;\n    });\n  };\n\n  var _useFonts = useFonts({\n    DancingScript: require(\"../assets/fonts/DancingScript-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    return null;\n  }\n\n  return React.createElement(DataProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: TabNavigator,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(LogoTitle, _extends({}, props, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 39\n          }\n        }));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            paddingHorizontal: 12\n          },\n          onPress: onPress,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }\n        }, React.createElement(IconBadge, {\n          MainElement: React.createElement(Fontisto, {\n            name: \"bell\",\n            size: 20,\n            color: \"#283328\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }\n          }),\n          BadgeElement: React.createElement(Text, {\n            style: [{\n              color: '#FFFFFF'\n            }, {\n              fontSize: 10\n            }],\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }\n          }, count),\n          IconBadgeStyle: {\n            width: 10,\n            height: 10,\n            borderRadius: 10,\n            top: 0,\n            left: 5,\n            backgroundColor: 'red'\n          },\n          Hidden: count == 0,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        })), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return alert('This is a basket!');\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }\n        }, React.createElement(Fontisto, {\n          name: \"shopping-basket\",\n          size: 20,\n          color: \"#283328\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }\n        })));\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(Text, {\n          style: [{\n            fontFamily: 'DancingScript'\n          }, {\n            fontSize: 18\n          }],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        }, \"PeterPet\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/seum/Desktop/peterpet/src/main.js"],"names":["React","useState","useFonts","Fontisto","IconBadge","NavigationContainer","createBottomTabNavigator","MaterialCommunityIcons","Feather","Ionicons","AntDesign","createNativeStackNavigator","DataProvider","HomeScreen","SettingsScreen","ChatScreen","CommunityScreen","ProfileScreen","Tab","TabNavigator","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","headerShown","tabBarBadge","Stack","LogoTitle","width","height","require","App","count","setCount","onPress","prevCount","DancingScript","loaded","headerTitle","props","headerRight","flexDirection","alignItems","justifyContent","paddingHorizontal","fontSize","borderRadius","top","left","backgroundColor","alert","headerLeft","fontFamily"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\nimport { useFonts } from 'expo-font';\nimport { Fontisto } from '@expo/vector-icons'; \nimport IconBadge from 'react-native-icon-badge';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons, Feather, Ionicons, AntDesign } from '@expo/vector-icons'; \nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {DataProvider} from './hooks';\n// import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\n// import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nimport HomeScreen from \"./screen/HomeScreen\"\nimport SettingsScreen from \"./screen/SettingsScreen\"\nimport ChatScreen from \"./screen/ChatScreen\"\nimport CommunityScreen from \"./screen/CommunityScreen\"\nimport ProfileScreen from \"./screen/ProfileScreen\"\n\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigator = () => (\n  <Tab.Navigator\n      screenOptions={({route}) => ({\n        tabBarIcon: ({focused, color, size}) => {\n          let iconName;\n          // focused: bool, 클릭했는지 여부\n  \n          switch (route.name) {\n            case 'Home':\n              iconName = 'home';\n              return (\n                <Feather size={size} name={iconName} color={color} />\n              );\n            case 'Chat':\n              iconName = 'forum-outline';\n              break;\n            case 'Community':\n              iconName = 'view-dashboard-outline';\n              break;\n            case 'Profile':\n              iconName = 'profile';\n              return (\n                <AntDesign size={size} name={iconName} color={color} />\n              );\n            default:\n              iconName = 'settings-outline';\n              return (\n                <Ionicons size={size} name={iconName} color={color} />\n              );\n          }\n          return (\n            <MaterialCommunityIcons size={size} name={iconName} color={color} />\n          );\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: '#38610B', // 활성화 되었을 때 색\n        inactiveTintColor: '#C7CDD3', // 비활성화 색\n        // showLabel: false, // 텍스트 숨기기\n  }}>\n    <Tab.Screen options={{ headerShown: false }} name=\"Home\" component={HomeScreen} />\n    <Tab.Screen options={{ headerShown: false }} name=\"Profile\" component={ProfileScreen} />\n    <Tab.Screen name=\"Chat\" component={ChatScreen} options={{\n    // headerTitleStyle: {\n    //   fontSize: 18,\n    //   textAlign: 'center',},},\n    headerShown: false, tabBarBadge: 1 }} />\n    <Tab.Screen options={{ headerShown: false }} name=\"Community\" component={CommunityScreen} />\n    <Tab.Screen options={{ headerShown: false }} name=\"Settings\" component={SettingsScreen} />\n  </Tab.Navigator>\n);\n\nconst Stack = createNativeStackNavigator ();\n\nfunction LogoTitle() {\n  return (\n    <Image\n      style={{ width: 80, height: 50 }}\n      source={require('../assets/peter.png')}\n    />\n  );\n}\n\nexport default function App() {\n\n  const [count, setCount] = useState(0);\n  const onPress = () => setCount(prevCount => prevCount + 1);\n\n  const [loaded] = useFonts({\n    DancingScript: require('../assets/fonts/DancingScript-Bold.ttf'),\n  });\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <DataProvider>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Main\"\n            component={TabNavigator}\n            options={{\n              headerTitle: (props) => <LogoTitle {...props} />,\n              headerRight: () => (\n                <View style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'center',}}>\n                  <TouchableOpacity \n                    style={{paddingHorizontal: 12}}\n                    onPress={onPress}\n                    >\n                    <IconBadge\n                      MainElement={\n                        <Fontisto name=\"bell\" size={20} color='#283328'/>\n                      }\n                      BadgeElement={\n                        <Text style={[{color:'#FFFFFF'},{fontSize: 10}]}>{count}</Text>\n                      }\n                      IconBadgeStyle={\n                        {width:10,\n                        height:10,\n                        borderRadius: 10,\n                        top: 0,\n                        left: 5,\n                        backgroundColor: 'red'}\n                      }\n                      Hidden={count==0}\n                      />\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={() => alert('This is a basket!')\n                    }>\n                    <Fontisto name=\"shopping-basket\" size={20} color=\"#283328\"/>\n                  </TouchableOpacity>\n                </View>),\n              headerLeft: () => (\n                <Text style={[{fontFamily:'DancingScript'},{fontSize: 18}]}>PeterPet</Text>\n              ),\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </DataProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}