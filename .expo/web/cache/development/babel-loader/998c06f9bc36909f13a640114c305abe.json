{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/seum/Desktop/peterpet/src/screen/login/RegisterScreen.js\";\n\nimport React, { useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Loader from \"./Loader\";\n\nvar RegisterScreen = function RegisterScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userAge = _useState6[0],\n      setUserAge = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userAddress = _useState8[0],\n      setUserAddress = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userPassword = _useState10[0],\n      setUserPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errortext = _useState14[0],\n      setErrortext = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isRegistraionSuccess = _useState16[0],\n      setIsRegistraionSuccess = _useState16[1];\n\n  var emailInputRef = createRef();\n  var ageInputRef = createRef();\n  var addressInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Please fill Name');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('Please fill Email');\n      return;\n    }\n\n    if (!userAge) {\n      alert('Please fill Age');\n      return;\n    }\n\n    if (!userAddress) {\n      alert('Please fill Address');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Please fill Password');\n      return;\n    }\n\n    setLoading(true);\n    var dataToSend = {\n      name: userName,\n      email: userEmail,\n      age: userAge,\n      address: userAddress,\n      password: userPassword\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n    fetch('http://localhost:3000/api/user/register', {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setLoading(false);\n      console.log(responseJson);\n\n      if (responseJson.status === 'success') {\n        setIsRegistraionSuccess(true);\n        console.log('Registration Successful. Please Login to proceed');\n      } else {\n        setErrortext(responseJson.msg);\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      console.error(error);\n    });\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../../assets/bell.png\"),\n      style: {\n        height: 150,\n        resizeMode: 'contain',\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"Registration Successful\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('로그인');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Login Now\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      top: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, React.createElement(Loader, {\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserName) {\n      return setUserName(UserName);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Name\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return emailInputRef.current && emailInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserEmail) {\n      return setUserEmail(UserEmail);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"#8b9cb5\",\n    keyboardType: \"email-address\",\n    ref: emailInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordInputRef.current && passwordInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Password\",\n    placeholderTextColor: \"#8b9cb5\",\n    ref: passwordInputRef,\n    returnKeyType: \"next\",\n    secureTextEntry: true,\n    onSubmitEditing: function onSubmitEditing() {\n      return ageInputRef.current && ageInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAge) {\n      return setUserAge(UserAge);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Age\",\n    placeholderTextColor: \"#8b9cb5\",\n    keyboardType: \"numeric\",\n    ref: ageInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return addressInputRef.current && addressInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAddress) {\n      return setUserAddress(UserAddress);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Address\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    ref: addressInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: Keyboard.dismiss,\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  })), errortext != '' ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, errortext) : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#A5DF00',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#283328',\n    paddingVertical: 12,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: '#283328',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: '#283328',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["/Users/seum/Desktop/peterpet/src/screen/login/RegisterScreen.js"],"names":["React","useState","createRef","Loader","RegisterScreen","props","userName","setUserName","userEmail","setUserEmail","userAge","setUserAge","userAddress","setUserAddress","userPassword","setUserPassword","loading","setLoading","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","handleSubmitButton","alert","dataToSend","name","email","age","address","password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","headers","then","response","json","responseJson","console","log","status","msg","catch","error","flex","justifyContent","require","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigation","navigate","buttonTextStyle","top","alignContent","SectionStyle","inputStyle","UserName","current","focus","UserEmail","UserPassword","UserAge","UserAddress","Keyboard","dismiss","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","margin","backgroundColor","borderWidth","color","borderColor","alignItems","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["import React, {useState, createRef} from 'react';\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  Text,\n  Image,\n  KeyboardAvoidingView,\n  Keyboard,\n  TouchableOpacity,\n  ScrollView,\n} from 'react-native';\n\nimport Loader from './Loader';\n\nconst RegisterScreen = (props) => {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userAge, setUserAge] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errortext, setErrortext] = useState('');\n  const [\n    isRegistraionSuccess,\n    setIsRegistraionSuccess\n  ] = useState(false);\n\n  const emailInputRef = createRef();\n  const ageInputRef = createRef();\n  const addressInputRef = createRef();\n  const passwordInputRef = createRef();\n\n  const handleSubmitButton = () => {\n    setErrortext('');\n    if (!userName) {\n      alert('Please fill Name');\n      return;\n    }\n    if (!userEmail) {\n      alert('Please fill Email');\n      return;\n    }\n    if (!userAge) {\n      alert('Please fill Age');\n      return;\n    }\n    if (!userAddress) {\n      alert('Please fill Address');\n      return;\n    }\n    if (!userPassword) {\n      alert('Please fill Password');\n      return;\n    }\n    //Show Loader\n    setLoading(true);\n    var dataToSend = {\n      name: userName,\n      email: userEmail,\n      age: userAge,\n      address: userAddress,\n      password: userPassword,\n    };\n    var formBody = [];\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n    formBody = formBody.join('&');\n\n    fetch('http://localhost:3000/api/user/register', {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        //Header Defination\n        'Content-Type':\n        'application/x-www-form-urlencoded;charset=UTF-8',\n      },\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        //Hide Loader\n        setLoading(false);\n        console.log(responseJson);\n        // If server response message same as Data Matched\n        if (responseJson.status === 'success') {\n          setIsRegistraionSuccess(true);\n          console.log(\n            'Registration Successful. Please Login to proceed'\n          );\n        } else {\n          setErrortext(responseJson.msg);\n        }\n      })\n      .catch((error) => {\n        //Hide Loader\n        setLoading(false);\n        console.error(error);\n      });\n  };\n  if (isRegistraionSuccess) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n        }}>\n        <Image\n          source={require('../../../assets/bell.png')}\n          style={{\n            height: 150,\n            resizeMode: 'contain',\n            alignSelf: 'center'\n          }}\n        />\n        <Text style={styles.successTextStyle}>\n          Registration Successful\n        </Text>\n        <TouchableOpacity\n          style={styles.buttonStyle}\n          activeOpacity={0.5}\n          onPress={() => props.navigation.navigate('로그인')}>\n          <Text style={styles.buttonTextStyle}>Login Now</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n  return (\n    <View style={{flex: 1, top:20,}}>\n      <Loader loading={loading} />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        contentContainerStyle={{\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}>\n        {/* <View style={alignItems: 'center'}>\n          <Image\n            source={require('../../../assets/peter.png')}\n            style={{\n              width: '50%',\n              height: 100,\n              resizeMode: 'cover',\n              margin: 30,\n            }}\n          />\n        </View> */}\n        <KeyboardAvoidingView enabled>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserName) => setUserName(UserName)}\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Name\"\n              placeholderTextColor=\"#8b9cb5\"\n              autoCapitalize=\"sentences\"\n              returnKeyType=\"next\"\n              onSubmitEditing={() =>\n                emailInputRef.current && emailInputRef.current.focus()\n              }\n              blurOnSubmit={false}\n            />\n          </View>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserEmail) => setUserEmail(UserEmail)}\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Email\"\n              placeholderTextColor=\"#8b9cb5\"\n              keyboardType=\"email-address\"\n              ref={emailInputRef}\n              returnKeyType=\"next\"\n              onSubmitEditing={() =>\n                passwordInputRef.current &&\n                passwordInputRef.current.focus()\n              }\n              blurOnSubmit={false}\n            />\n          </View>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserPassword) =>\n                setUserPassword(UserPassword)\n              }\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Password\"\n              placeholderTextColor=\"#8b9cb5\"\n              ref={passwordInputRef}\n              returnKeyType=\"next\"\n              secureTextEntry={true}\n              onSubmitEditing={() =>\n                ageInputRef.current &&\n                ageInputRef.current.focus()\n              }\n              blurOnSubmit={false}\n            />\n          </View>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserAge) => setUserAge(UserAge)}\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Age\"\n              placeholderTextColor=\"#8b9cb5\"\n              keyboardType=\"numeric\"\n              ref={ageInputRef}\n              returnKeyType=\"next\"\n              onSubmitEditing={() =>\n                addressInputRef.current &&\n                addressInputRef.current.focus()\n              }\n              blurOnSubmit={false}\n            />\n          </View>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserAddress) =>\n                setUserAddress(UserAddress)\n              }\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Address\"\n              placeholderTextColor=\"#8b9cb5\"\n              autoCapitalize=\"sentences\"\n              ref={addressInputRef}\n              returnKeyType=\"next\"\n              onSubmitEditing={Keyboard.dismiss}\n              blurOnSubmit={false}\n            />\n          </View>\n          {errortext != '' ? (\n            <Text style={styles.errorTextStyle}>\n              {errortext}\n            </Text>\n          ) : null}\n          <TouchableOpacity\n            style={styles.buttonStyle}\n            activeOpacity={0.5}\n            onPress={handleSubmitButton}>\n            <Text style={styles.buttonTextStyle}>회원가입</Text>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </View>\n  );\n};\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#A5DF00',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#283328',\n    paddingVertical: 12,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    color: '#283328',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: '#283328',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n});"]},"metadata":{},"sourceType":"module"}